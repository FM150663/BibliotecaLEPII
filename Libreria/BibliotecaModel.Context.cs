//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Libreria
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using System.ComponentModel;

    public partial class Contexto : DbContext
    {
        public Contexto()
            : base("name=Contexto")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AUTOR> AUTORs { get; set; }
        public virtual DbSet<EDITORIAL> EDITORIALs { get; set; }
        public virtual DbSet<LIBRO> LIBROes { get; set; }
        public virtual DbSet<NACIONALIDAD> NACIONALIDADs { get; set; }
        public virtual DbSet<usuario> usuarios { get; set; }
        public virtual DbSet<UBICACION> UBICACIONs { get; set; }
    
        public virtual int INSERTAR_USUARIOS(string usu, string pwd)
        {
            var usuParameter = usu != null ?
                new ObjectParameter("usu", usu) :
                new ObjectParameter("usu", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTAR_USUARIOS", usuParameter, pwdParameter);
        }
    
        public virtual ObjectResult<VALIDAR_USUARIO_Result> VALIDAR_USUARIO(string usu, string pwd)
        {
            var usuParameter = usu != null ?
                new ObjectParameter("usu", usu) :
                new ObjectParameter("usu", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VALIDAR_USUARIO_Result>("VALIDAR_USUARIO", usuParameter, pwdParameter);
        }

        public DataTable ConvertToDataTable<T>(IList<T> data)
        {
            PropertyDescriptorCollection properties = TypeDescriptor.GetProperties(typeof(T));
            DataTable table = new DataTable();
            foreach (PropertyDescriptor prop in properties)
                table.Columns.Add(prop.Name, Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType);
            foreach (T item in data)
            {
                DataRow row = table.NewRow();
                foreach (PropertyDescriptor prop in properties)
                    row[prop.Name] = prop.GetValue(item) ?? DBNull.Value;
                table.Rows.Add(row);
            }
            return table;

        }
    }
}
